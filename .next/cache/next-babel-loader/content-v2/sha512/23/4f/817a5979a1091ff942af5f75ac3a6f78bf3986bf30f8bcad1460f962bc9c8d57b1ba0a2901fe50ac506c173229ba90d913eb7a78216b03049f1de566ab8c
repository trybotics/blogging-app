{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\demo\\\\blogging-app\\\\pages\\\\favorites\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport styles from \"../../styles/Home.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MovieList from \"../../components/MovieList\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { listFavoriteMovies } from \"../../src/graphql/queries\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  pagination: {\n    margin: \"36px 0\"\n  }\n}));\nexport default function Home({\n  moviesProps\n}) {\n  const classes = useStyles();\n  const [movies, setMovies] = React.useState(moviesProps);\n  React.useEffect(async () => {\n    const movies = await getData(1);\n    setMovies(movies.map(movie => {\n      return _objectSpread(_objectSpread({}, movie), {}, {\n        id: movie.movie_id\n      });\n    }));\n  }, []);\n\n  const removeMovie = movieId => {\n    setMovies(movies.filter(movie => {\n      return movie.id != movieId;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies,\n      favorite: true,\n      removeMovie: removeMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const movies = await getData(1);\n  return {\n    props: {\n      moviesProps: movies\n    }\n  };\n};\n\nconst getData = async (page, search) => {\n  try {\n    const res = await API.graphql(graphqlOperation(listFavoriteMovies));\n    console.log(\"res.data.listFavoriteMovies.items\", res, res.data.listFavoriteMovies.items);\n    return res.data.listFavoriteMovies.items;\n  } catch (error) {\n    console.log(\"error\", error);\n    return [];\n  }\n};","map":{"version":3,"sources":["D:/Projects/demo/blogging-app/pages/favorites/index.js"],"names":["React","styles","makeStyles","MovieList","API","graphqlOperation","listFavoriteMovies","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","pagination","margin","Home","moviesProps","classes","movies","setMovies","useState","useEffect","getData","map","movie","id","movie_id","removeMovie","movieId","filter","container","getStaticProps","props","page","search","res","graphql","console","log","data","items","error"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHrB,GAJgC;AASvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE;AADE;AAT2B,CAAZ,CAAD,CAA5B;AAcA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA+B;AAC5C,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBzB,KAAK,CAAC0B,QAAN,CAAeJ,WAAf,CAA5B;AAEAtB,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,YAAY;AAC1B,UAAMH,MAAM,GAAG,MAAMI,OAAO,CAAC,CAAD,CAA5B;AACAH,IAAAA,SAAS,CACPD,MAAM,CAACK,GAAP,CAAYC,KAAD,IAAW;AACpB,6CAAYA,KAAZ;AAAmBC,QAAAA,EAAE,EAAED,KAAK,CAACE;AAA7B;AACD,KAFD,CADO,CAAT;AAKD,GAPD,EAOG,EAPH;;AASA,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAC/BT,IAAAA,SAAS,CACPD,MAAM,CAACW,MAAP,CAAeL,KAAD,IAAW;AACvB,aAAOA,KAAK,CAACC,EAAN,IAAYG,OAAnB;AACD,KAFD,CADO,CAAT;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEjC,MAAM,CAACmC,SAAvB;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEZ,MAAnB;AAA2B,MAAA,QAAQ,EAAE,IAArC;AAA2C,MAAA,WAAW,EAAES;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED,OAAO,MAAMI,cAAc,GAAG,YAAY;AACxC,QAAMb,MAAM,GAAG,MAAMI,OAAO,CAAC,CAAD,CAA5B;AACA,SAAO;AACLU,IAAAA,KAAK,EAAE;AACLhB,MAAAA,WAAW,EAAEE;AADR;AADF,GAAP;AAKD,CAPM;;AASP,MAAMI,OAAO,GAAG,OAAOW,IAAP,EAAaC,MAAb,KAAwB;AACtC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMrC,GAAG,CAACsC,OAAJ,CAAYrC,gBAAgB,CAACC,kBAAD,CAA5B,CAAlB;AACAqC,IAAAA,OAAO,CAACC,GAAR,CACE,mCADF,EAEEH,GAFF,EAGEA,GAAG,CAACI,IAAJ,CAASvC,kBAAT,CAA4BwC,KAH9B;AAKA,WAAOL,GAAG,CAACI,IAAJ,CAASvC,kBAAT,CAA4BwC,KAAnC;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB;AACA,WAAO,EAAP;AACD;AACF,CAbD","sourcesContent":["import React from \"react\";\nimport styles from \"../../styles/Home.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MovieList from \"../../components/MovieList\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { listFavoriteMovies } from \"../../src/graphql/queries\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  pagination: {\n    margin: \"36px 0\",\n  },\n}));\n\nexport default function Home({ moviesProps }) {\n  const classes = useStyles();\n  const [movies, setMovies] = React.useState(moviesProps);\n\n  React.useEffect(async () => {\n    const movies = await getData(1);\n    setMovies(\n      movies.map((movie) => {\n        return { ...movie, id: movie.movie_id };\n      })\n    );\n  }, []);\n\n  const removeMovie = (movieId) => {\n    setMovies(\n      movies.filter((movie) => {\n        return movie.id != movieId;\n      })\n    );\n  };\n  \n  return (\n    <div className={styles.container}>\n      <MovieList movies={movies} favorite={true} removeMovie={removeMovie} />\n    </div>\n  );\n}\n\nexport const getStaticProps = async () => {\n  const movies = await getData(1);\n  return {\n    props: {\n      moviesProps: movies,\n    },\n  };\n};\n\nconst getData = async (page, search) => {\n  try {\n    const res = await API.graphql(graphqlOperation(listFavoriteMovies));\n    console.log(\n      \"res.data.listFavoriteMovies.items\",\n      res,\n      res.data.listFavoriteMovies.items\n    );\n    return res.data.listFavoriteMovies.items;\n  } catch (error) {\n    console.log(\"error\", error);\n    return [];\n  }\n};\n"]},"metadata":{},"sourceType":"module"}