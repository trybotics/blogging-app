{"ast":null,"code":"import { SET_CURRENT_USER, SET_USER, EXISTING_USER, LOGOUT, CLOSE_SNACKBAR, LOGIN_FAIL, SIGNUP_FAIL, SET_NEW_USERS, SET_NEW_PROJECTS, SET_NEW_INTERNSHIPS, SET_NEW_BLOGS, SET_TOAST } from \"./ActionType\"; // import axios from \"axios\";\n\nimport config from \"../config\";\nvar apiRoot = config.api.root; // export const getCurrentUser = authToken => {\n//   return dispatch => {\n//     return axios\n//       .get(apiRoot + \"/api/user/getAuthUser\", {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: \"Basic \" + authToken\n//         }\n//       })\n//       .then(response => {\n//         dispatch(setCurrentUser(response.data[0]));\n//       })\n//       .catch(error => {\n//         throw error;\n//       });\n//   };\n// };\n\nexport const login = data => {\n  return dispatch => {\n    return axios.post(apiRoot + \"/api/user/login\", data).then(response => {\n      if (response.data[0]) {\n        dispatch(setCurrentUser(response.data[0]));\n      } else {\n        dispatch(loginFail());\n      }\n    }, error => {\n      dispatch(loginFail());\n    });\n  };\n};\nexport const signup = data => {\n  return dispatch => {\n    return axios.post(apiRoot + \"/api/user/signup\", data).then(response => {\n      if (response.data.User) {\n        dispatch(existingUser());\n      } else if (response.data.id) {\n        dispatch(setUser(response.data));\n      } else {\n        dispatch(signUpFail());\n      }\n    }, error => {\n      dispatch(signUpFail());\n    });\n  };\n};\nexport const socialLogin = data => {\n  return dispatch => {\n    return axios.post(apiRoot + \"/api/user/socialLogin\", data).then(response => {\n      if (response.data.isSignIn) {\n        dispatch(setCurrentUser(response.data.user));\n      } else {\n        dispatch(setUser(response.data));\n      }\n    }, error => {\n      dispatch(loginFail());\n    });\n  };\n};\nexport const getNewUsers = skip => {\n  return dispatch => {\n    return axios.get(apiRoot + \"/api/user?limit=24&skip=\" + skip).then(response => {\n      if (response.data.length > 0) {\n        dispatch(setNewUsers(response.data));\n      }\n    }, error => {\n      console.log(error);\n    });\n  };\n};\nexport const getNewProjects = skip => {\n  return dispatch => {\n    return axios.get(apiRoot + \"/api/project?limit=24&skip=\" + skip).then(response => {\n      if (response.data.length > 0) {\n        dispatch(setNewProjects(response.data));\n      }\n    }, error => {\n      console.log(error);\n    });\n  };\n};\nexport const getNewInternships = page => {\n  return dispatch => {\n    return axios.get(apiRoot + \"/api/internship?page=\" + page).then(response => {\n      if (response.data.length > 0) {\n        dispatch(setNewInternships(response.data));\n      }\n    }, error => {\n      console.log(error);\n    });\n  };\n};\nexport const getNewBlogs = skip => {\n  return dispatch => {\n    return axios.get(apiRoot + \"/api/blog?limit=24&skip=\" + skip).then(response => {\n      if (response.data.length > 0) {\n        dispatch(setNewBlogs(response.data));\n      }\n    }, error => {\n      console.log(error);\n    });\n  };\n};\nexport const showToast = msg => {\n  return dispatch => {\n    return dispatch(setToast(msg));\n  };\n};\nexport const setCurrentUser = user => {\n  user.isLogin = true;\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n};\nexport const setUser = user => {\n  user.isLogin = true;\n  return {\n    type: SET_USER,\n    user\n  };\n};\nexport const existingUser = () => {\n  return {\n    type: EXISTING_USER\n  };\n};\nexport const loginFail = () => {\n  return {\n    type: LOGIN_FAIL\n  };\n};\nexport const signUpFail = () => {\n  return {\n    type: SIGNUP_FAIL\n  };\n};\nexport const closeSnackbar = () => {\n  return {\n    type: CLOSE_SNACKBAR\n  };\n};\nexport const logOut = () => {\n  return {\n    type: LOGOUT\n  };\n};\nexport const setNewUsers = users => {\n  return {\n    type: SET_NEW_USERS,\n    users\n  };\n};\nexport const setNewProjects = projects => {\n  return {\n    type: SET_NEW_PROJECTS,\n    projects\n  };\n};\nexport const setNewInternships = internships => {\n  return {\n    type: SET_NEW_INTERNSHIPS,\n    internships\n  };\n};\nexport const setNewBlogs = blogs => {\n  return {\n    type: SET_NEW_BLOGS,\n    blogs\n  };\n};\nexport const setToast = msg => {\n  return {\n    type: SET_TOAST,\n    msg\n  };\n};","map":{"version":3,"sources":["D:/Projects/demo/blogging-app/actions/Home.js"],"names":["SET_CURRENT_USER","SET_USER","EXISTING_USER","LOGOUT","CLOSE_SNACKBAR","LOGIN_FAIL","SIGNUP_FAIL","SET_NEW_USERS","SET_NEW_PROJECTS","SET_NEW_INTERNSHIPS","SET_NEW_BLOGS","SET_TOAST","config","apiRoot","api","root","login","data","dispatch","axios","post","then","response","setCurrentUser","loginFail","error","signup","User","existingUser","id","setUser","signUpFail","socialLogin","isSignIn","user","getNewUsers","skip","get","length","setNewUsers","console","log","getNewProjects","setNewProjects","getNewInternships","page","setNewInternships","getNewBlogs","setNewBlogs","showToast","msg","setToast","isLogin","type","closeSnackbar","logOut","users","projects","internships","blogs"],"mappings":"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","sourcesContent":["import {\n  SET_CURRENT_USER,\n  SET_USER,\n  EXISTING_USER,\n  LOGOUT,\n  CLOSE_SNACKBAR,\n  LOGIN_FAIL,\n  SIGNUP_FAIL,\n  SET_NEW_USERS,\n  SET_NEW_PROJECTS,\n  SET_NEW_INTERNSHIPS,\n  SET_NEW_BLOGS,\n  SET_TOAST\n} from \"./ActionType\";\n// import axios from \"axios\";\n\nimport config from \"../config\";\nvar apiRoot = config.api.root;\n\n// export const getCurrentUser = authToken => {\n//   return dispatch => {\n//     return axios\n//       .get(apiRoot + \"/api/user/getAuthUser\", {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: \"Basic \" + authToken\n//         }\n//       })\n//       .then(response => {\n//         dispatch(setCurrentUser(response.data[0]));\n//       })\n//       .catch(error => {\n//         throw error;\n//       });\n//   };\n// };\n\nexport const login = data => {\n  return dispatch => {\n    return axios.post(apiRoot + \"/api/user/login\", data).then(\n      response => {\n        if (response.data[0]) {\n          dispatch(setCurrentUser(response.data[0]));\n        } else {\n          dispatch(loginFail());\n        }\n      },\n      error => {\n        dispatch(loginFail());\n      }\n    );\n  };\n};\n\nexport const signup = data => {\n  return dispatch => {\n    return axios.post(apiRoot + \"/api/user/signup\", data).then(\n      response => {\n        if (response.data.User) {\n          dispatch(existingUser());\n        } else if (response.data.id) {\n          dispatch(setUser(response.data));\n        } else {\n          dispatch(signUpFail());\n        }\n      },\n      error => {\n        dispatch(signUpFail());\n      }\n    );\n  };\n};\n\nexport const socialLogin = data => {\n  return dispatch => {\n    return axios.post(apiRoot + \"/api/user/socialLogin\", data).then(\n      response => {\n        if (response.data.isSignIn) {\n          dispatch(setCurrentUser(response.data.user));\n        } else {\n          dispatch(setUser(response.data));\n        }\n      },\n      error => {\n        dispatch(loginFail());\n      }\n    );\n  };\n};\n\nexport const getNewUsers = skip => {\n  return dispatch => {\n    return axios.get(apiRoot + \"/api/user?limit=24&skip=\" + skip).then(\n      response => {\n        if (response.data.length > 0) {\n          dispatch(setNewUsers(response.data));\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n};\n\nexport const getNewProjects = skip => {\n  return dispatch => {\n    return axios.get(apiRoot + \"/api/project?limit=24&skip=\" + skip).then(\n      response => {\n        if (response.data.length > 0) {\n          dispatch(setNewProjects(response.data));\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n};\n\nexport const getNewInternships = page => {\n  return dispatch => {\n    return axios.get(apiRoot + \"/api/internship?page=\" + page).then(\n      response => {\n        if (response.data.length > 0) {\n          dispatch(setNewInternships(response.data));\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n};\n\nexport const getNewBlogs = skip => {\n  return dispatch => {\n    return axios.get(apiRoot + \"/api/blog?limit=24&skip=\" + skip).then(\n      response => {\n        if (response.data.length > 0) {\n          dispatch(setNewBlogs(response.data));\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n};\n\nexport const showToast = msg => {\n  return dispatch => {\n    return dispatch(setToast(msg));\n  };\n};\n\nexport const setCurrentUser = user => {\n  user.isLogin = true;\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n};\n\nexport const setUser = user => {\n  user.isLogin = true;\n  return {\n    type: SET_USER,\n    user\n  };\n};\n\nexport const existingUser = () => {\n  return {\n    type: EXISTING_USER\n  };\n};\n\nexport const loginFail = () => {\n  return {\n    type: LOGIN_FAIL\n  };\n};\n\nexport const signUpFail = () => {\n  return {\n    type: SIGNUP_FAIL\n  };\n};\n\nexport const closeSnackbar = () => {\n  return {\n    type: CLOSE_SNACKBAR\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: LOGOUT\n  };\n};\n\nexport const setNewUsers = users => {\n  return {\n    type: SET_NEW_USERS,\n    users\n  };\n};\n\nexport const setNewProjects = projects => {\n  return {\n    type: SET_NEW_PROJECTS,\n    projects\n  };\n};\n\nexport const setNewInternships = internships => {\n  return {\n    type: SET_NEW_INTERNSHIPS,\n    internships\n  };\n};\n\nexport const setNewBlogs = blogs => {\n  return {\n    type: SET_NEW_BLOGS,\n    blogs\n  };\n};\n\nexport const setToast = msg => {\n  return {\n    type: SET_TOAST,\n    msg\n  };\n};\n"]},"metadata":{},"sourceType":"module"}