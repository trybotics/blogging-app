{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\demo\\\\blogging-app\\\\pages\\\\movie\\\\[id]\\\\index.js\";\nimport styles from \"../../../styles/Home.module.css\";\nimport Link from \"next/link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useRouter } from \"next/router\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\nimport Button from \"@material-ui/core/Button\";\n\nconst movie = ({\n  movie\n}) => {\n  const router = useRouter(); // const { id } = router.query\n\n  console.log(\"router\", router);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: router.pathname.split(\",\")[1],\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\" //   className={classes.button}\n        ,\n        endIcon: /*#__PURE__*/_jsxDEV(KeyboardReturnIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }, this),\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://image.tmdb.org/t/p/w185${movie.poster_path}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      noWrap: true,\n      style: {\n        marginTop: 10\n      },\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"primary\",\n      children: [\"Popularity: \", Math.floor(movie.popularity), \", \\xA0 Rating:\", \" \", movie.vote_average, \"/10, \\xA0 Voted: \", movie.vote_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      style: {\n        textAlign: \"justify\"\n      },\n      children: movie.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = async context => {\n  const res = await fetch(`https://api.themoviedb.org/3/movie/${context.params.id}?api_key=e649c1ec4f43c9f8ea307ec5aec0e891`);\n  const movie = await res.json();\n  return {\n    props: {\n      movie\n    }\n  };\n}; // export const getStaticPaths = async () => {\n//   const res = await fetch(\n//     `https://api.themoviedb.org/3/movie/now_playing?api_key=e649c1ec4f43c9f8ea307ec5aec0e891`\n//   );\n//   const movies = await res.json();\n//   console.log();\n//   const ids = movies.results.map((movie) => movie.id);\n//   const paths = ids.map((id) => ({ params: { id: id.toString() } }));\n//   return {\n//     paths,\n//     fallback: false,\n//   };\n// };\n\nexport default movie;","map":{"version":3,"sources":["D:/Projects/demo/blogging-app/pages/movie/[id]/index.js"],"names":["styles","Link","Typography","useRouter","KeyboardReturnIcon","Button","movie","router","console","log","container","pathname","split","poster_path","marginTop","title","Math","floor","popularity","vote_average","vote_count","textAlign","overview","getServerSideProps","context","res","fetch","params","id","json","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,iCAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAe;AAC3B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB,CAD2B,CAE3B;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACU,SAAvB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,MAAM,CAACI,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAZ;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR,CAGE;AAHF;AAIE,QAAA,OAAO,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAK,MAAA,GAAG,EAAG,iCAAgCN,KAAK,CAACO,WAAY;AAA7D;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAsC,MAAA,MAAM,EAAE,IAA9C;AAAoD,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAA3D;AAAA,gBACGR,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,YAdF,eAiBE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAAA,iCACeC,IAAI,CAACC,KAAL,CAAWX,KAAK,CAACY,UAAjB,CADf,oBAC6D,GAD7D,EAEGZ,KAAK,CAACa,YAFT,uBAGUb,KAAK,CAACc,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eAsBE;AAAA;AAAA;AAAA;AAAA,YAtBF,eAuBE,QAAC,UAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAHT;AAAA,gBAKGf,KAAK,CAACgB;AALT;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAtCD;;AAwCA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AACnD,QAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,qCAAoCF,OAAO,CAACG,MAAR,CAAeC,EAAG,2CADlC,CAAvB;AAIA,QAAMtB,KAAK,GAAG,MAAMmB,GAAG,CAACI,IAAJ,EAApB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLxB,MAAAA;AADK;AADF,GAAP;AAKD,CAZM,C,CAcP;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,KAAf","sourcesContent":["import styles from \"../../../styles/Home.module.css\";\nimport Link from \"next/link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useRouter } from \"next/router\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\nimport Button from \"@material-ui/core/Button\";\n\nconst movie = ({ movie }) => {\n  const router = useRouter()\n  // const { id } = router.query\n  console.log(\"router\", router)\n\n  return (\n    <div className={styles.container}>\n      <Link href={router.pathname.split(\",\")[1]}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          //   className={classes.button}\n          endIcon={<KeyboardReturnIcon />}\n        >\n          Go Back\n        </Button>\n      </Link>\n      <br />\n      <br />\n      <img src={`http://image.tmdb.org/t/p/w185${movie.poster_path}`} />\n      <Typography variant=\"h5\" gutterBottom noWrap={true} style={{marginTop: 10}}>\n        {movie.title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"primary\">\n        Popularity: {Math.floor(movie.popularity)}, &nbsp; Rating:{\" \"}\n        {movie.vote_average}/10, &nbsp;\n        Voted: {movie.vote_count}\n      </Typography>\n      <br />\n      <Typography\n        variant=\"body2\"\n        color=\"textSecondary\"\n        style={{ textAlign: \"justify\" }}\n      >\n        {movie.overview}\n      </Typography>\n    </div>\n  );\n};\n\nexport const getServerSideProps = async (context) => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${context.params.id}?api_key=e649c1ec4f43c9f8ea307ec5aec0e891`\n  );\n\n  const movie = await res.json();\n\n  return {\n    props: {\n      movie,\n    },\n  };\n};\n\n// export const getStaticPaths = async () => {\n//   const res = await fetch(\n//     `https://api.themoviedb.org/3/movie/now_playing?api_key=e649c1ec4f43c9f8ea307ec5aec0e891`\n//   );\n\n//   const movies = await res.json();\n//   console.log();\n\n//   const ids = movies.results.map((movie) => movie.id);\n//   const paths = ids.map((id) => ({ params: { id: id.toString() } }));\n\n//   return {\n//     paths,\n//     fallback: false,\n//   };\n// };\n\nexport default movie;\n"]},"metadata":{},"sourceType":"module"}